{"version":3,"sources":["Helpers/getSchedules.js","env.js","Context/AuthProvider.js","Components/AddCourseForm.js","Components/Schedule.js","Context/UserProvider.js","Components/AuthDashboard.js","Components/AuthApp.js","misc/Scheduler.png","Components/Nav.js","Components/Home.js","Components/GuestApp.js","Components/App.js","reportWebVitals.js","index.js"],"names":["DATE_CONVERTER","colors","generateSchedules","schedules","flag","eventSchedules","forEach","schedule","events","colorIndex","courseColors","section","console","log","i","daysOfWeek","length","id","sectionId","start","Date","end","setHours","startTime","hour","minute","endTime","parseInt","split","courseName","department","courseNumber","toString","color","title","sectionType","push","API_URL","window","location","href","AuthContext","createContext","AuthProvider","props","useState","auth","setAuth","useEffect","signIn","a","email","password","msg","url","URL","search","URLSearchParams","fetch","method","credentials","then","response","json","data","status","message","catch","error","signOut","Swal","fire","Provider","value","signUp","fname","lname","resp","icon","text","useAuth","useContext","styles","container","provided","state","width","margin","menu","zIndex","marginTop","queryCourses","query","Promise","resolve","match","toUpperCase","axios","get","courseOptions","map","course","name","label","AddCourseForm","selectedCourses","setSelectedCourses","setDefaultOptions","loadOptions","useRef","debounce","callback","current","style","onChange","courses","isMulti","placeholder","Button","block","minWidth","variant","onClick","slice","localStorage","getItem","extraCurriculum","setItem","JSON","stringify","allEvents","show","Schedule","setSchedules","scheduleIndex","setIndex","handleRightClick","handleLeftClick","parse","className","schedulerLicenseKey","plugins","timeGridPlugin","initialView","initialDate","hiddenDays","dayHeaderFormat","weekday","allDaySlot","height","contentHeight","slotMinTime","slotMaxTime","customButtons","right","click","left","select","charAt","alert","getSaved","clear","removeItem","headerToolbar","UserContext","UserProvider","getUser","Courses","newCourses","AuthDashboard","setCourses","extracurriculars","setExtracurriculars","setStartTime","setEndTime","changedPreferences","setChanged","checkTime","time","hours","minutes","courseData","extracurricularData","startTimeData","endTimeData","verifyCourse","add","reject","Object","keys","constructor","Container","Row","Col","Form","onSubmit","event","preventDefault","target","elements","Group","controlId","Label","Control","type","Text","remove","extracurricular","fluid","prefURL","generateURL","extracurriculum","strFormat","history","ListGroup","Item","times","AuthApp","exact","path","component","Nav","Navbar","to","Brand","src","logo","Toggle","aria-controls","Collapse","Link","Home","setSearch","setClear","showSearch","clearSchedules","maxWidth","textAlign","alt","GuestApp","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","REACT_APP_ROUTER_BASE","document","getElementById"],"mappings":"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","file":"static/js/main.730c551b.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst DATE_CONVERTER = {\n    'M': '2020-12-08',\n    'T': '2020-12-09',\n    'W': '2020-12-10',\n    'H': '2020-12-11',\n    'F': '2020-12-12'\n}\n\n\nconst colors = ['blue', 'green', 'purple', 'orange', 'brown']\n// helper function for getSchedules\nexport const generateSchedules = (schedules, flag=true) => {\n    // parses schedules in order to convert schedules into lists of events that are able to serve as input to calendar component\n    const eventSchedules = []\n    schedules.forEach(schedule => {\n        const events = [];\n        let colorIndex = 0;\n        const courseColors = {}\n        schedule.forEach(section => {\n            console.log(\"processing schedules\")\n            for(let i = 0; i < section.daysOfWeek.length; i++) {\n                const id = section.sectionId;\n                const start = new Date(DATE_CONVERTER[section.daysOfWeek[i]])\n                const end = new Date(DATE_CONVERTER[section.daysOfWeek[i]])\n                if (flag) {\n                    start.setHours(section.startTime.hour, section.startTime.minute, 0);\n                    end.setHours(section.endTime.hour, section.endTime.minute, 0);\n                }\n                else {\n                    start.setHours(parseInt(section.startTime.split(\":\")[0]), parseInt(section.startTime.split(\":\")[1]))\n                    end.setHours(parseInt(section.endTime.split(\":\")[0]), parseInt(section.endTime.split(\":\")[1]))\n                }\n                const courseName = section.department + section.courseNumber.toString();\n                let color = null;\n                if (courseName in courseColors) color = courseColors[courseName];\n                else {\n                    color = colors[colorIndex++ % colors.length];\n                    courseColors[courseName] = color;\n                }\n                const title = courseName+ '-' + section.sectionType + '-' + section.sectionId;\n                events.push({ id, title, start, end, color })\n            }\n        })\n        eventSchedules.push(events)\n    })\n    return eventSchedules\n}","export const API_URL = window.location.href + 'CS201/api/'\n// export const API_URL = 'http://localhost:8080/CS201/api/'","import React, {useState, createContext, useContext, useEffect} from 'react';\nimport Swal from 'sweetalert2';\nimport { API_URL } from '../env'\n\nconst AuthContext = createContext();\nconst AuthProvider = (props) => {\n    const [auth, setAuth] = useState(false)\n\n    // let checkIsLogined = async () => {\n    //     console.log(\"checking if logged in\");\n    //     await fetch(API_URL + \"session\", {\n    //         method: \"POST\",\n    //         credentials: 'include'\n    //     }).then(response => response.json())\n    //     .then(data => {\n    //         console.log(data);\n    //         if (data.status === \"success\"){\n    //             setAuth(true);\n    //             console.log('is logged in');\n    //         }\n    //         else {\n    //             console.log(data);\n    //         }\n    //     })\n    //     .catch(error => {\n    //         console.log(error);\n    //     });\n    // }\n\n    useEffect(() => {\n        // this function is called everytime the browser is refreshed\n        // checks if the user is already logged in\n        // if already logged in, set auth to true\n        // if (!auth){\n        //     checkIsLogined();\n        // }\n        // cleanup auth\n        // return () => setAuth(false);\n    }, [ auth ]);\n\n    const signUp = ({ fname, lname, email, password }) => {\n        // sends form data to signup endpoint of server\n        // if successful, sets auth to true\n        const url = new URL(API_URL + 'users');\n        url.search = new URLSearchParams({fname, lname, email, password})\n        fetch(url,{\n            method:\"POST\",\n            credentials: 'include'\n            })\n            .then(resp => resp.json())\n            .then(data => {\n                if (data.message === \"success\"){\n                    Swal.fire({\n                        icon: 'success',\n                        text: 'welcome!'\n                    });\n                    setAuth(true);\n                }\n                else{\n                    Swal.fire({\n                        icon: 'error',\n                        text: data.message,\n                    })\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    const signIn = async ({ email, password }) => {\n        // sends form data to signin endpoint of server\n        // if successful, sets auth to true\n        let msg = null;\n        const url = new URL(API_URL + \"session\");\n        console.log(email, password)\n        url.search = new URLSearchParams({ email, password })\n        await fetch(url, {\n            method: \"POST\",\n            credentials: 'include'\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                if (data.status === \"success\") {\n                    console.log(\"setting auth  = true\");\n                    setAuth(true);\n                }\n                else{\n                    msg = data.message;\n                    setAuth(false);\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n        return msg;\n    }\n\n    const signOut = async () => {\n        // sets auth to false and if necessary, communicates with signout endpoint of api to sign out\n        // let fName = \"\";\n        await fetch(API_URL + \"session\", {\n            method: \"DELETE\",\n            credentials: 'include',\n        })\n        .then(() => {\n            Swal.fire(\"Bye!\");\n            setAuth(false);\n        });\n    }\n\n    // All components that nested under this component will have access to these elements, and will be able to call these functions\n    return <AuthContext.Provider value={{auth, signUp, signIn, signOut}} {...props}/>;\n}\n\n// useAuth returns an object containing the elements in the provider\nconst useAuth = () => useContext(AuthContext);\nexport { AuthProvider, useAuth };\n\n// to use this provider, a component must import useAuth and call it as a function for it to return an object","import { useState, useRef, useEffect } from 'react';\nimport debounce from 'debounce-promise';\nimport { API_URL } from '../env'\nimport Button from 'react-bootstrap/Button';\nimport { generateSchedules } from '../Helpers/getSchedules';\nimport { createFilter } from 'react-select';\nimport AsyncSelect from 'react-select/async'\nimport axios from 'axios';\n\nconst styles = {\n    container: (provided, state) => ({\n        ...provided,\n        width: '75%',\n        margin: 'auto',\n    }),\n    menu: (provided, state) => ({\n        ...provided,\n        zIndex: 10,\n        marginTop: 0\n    })\n}\n\nconst queryCourses = async query => {\n    return new Promise(resolve => {\n        if (!query) {\n            return resolve([])\n        }\n        let department = query.match('[^0-9]+')\n        let courseNumber = query.match('[0-9]+[^0-9]*')\n        if (department != null) department = department[0].toUpperCase();\n        if (courseNumber != null) courseNumber = courseNumber[0].toUpperCase();\n        const url = new URL(API_URL + 'query');\n        url.search = new URLSearchParams({ department, courseNumber });\n        axios.get(url).then(response => {\n            const courses = response.data\n            const courseOptions = courses.map(course => {\n                const name = course.department.toUpperCase() + course.courseNumber.toString();\n                return {\n                    label: name + ': ' + course.title,\n                    value: name\n                }\n            });\n            return resolve(courseOptions);\n        })\n        .catch(error => {\n            console.log(error);\n            return resolve([]);\n        })\n    })\n}\n\nconst AddCourseForm = props => {\n    const [ selectedCourses, setSelectedCourses ] = useState([]);\n\n    const [ defaultOptions, setDefaultOptions ] = useState([]);\n\n    const loadOptions = useRef(debounce(async (query, callback) => {\n        const courseOptions = await queryCourses(query);\n        callback(courseOptions);\n    }, 500)).current\n\n    useEffect(() => {\n         console.log('getting default options')\n         let department = null;\n         let courseNumber = null;\n         const url = new URL(API_URL + 'query');\n         url.search = new URLSearchParams({ department, courseNumber });\n         axios.get(url).then(response => {\n             const courses = response.data\n             const courseOptions = courses.map(course => {\n                 const name = course.department.toUpperCase() + course.courseNumber.toString();\n                 return {\n                     label: name + ': ' + course.title,\n                     value: name\n                 }\n             });\n             setDefaultOptions(courseOptions)\n         })\n         .catch(error => {\n             console.log('error getting default options', error)\n             setDefaultOptions([]);\n         })\n     }, []);\n\n    const handleChange = courses => {\n        if (courses != null) {\n            courses.map(course => {\n                course.label = course.value\n                return course;\n            });\n        }\n        setSelectedCourses(courses);\n    }\n\n    const createSchedules = () => {\n        const extracurriculum = null;\n        let courses = \"\";\n        if (selectedCourses) {\n        selectedCourses.forEach(course => {\n            courses += course.value + ',';\n        })\n        courses = courses.slice(0, -1);\n        }\n        const startTime = localStorage.getItem(\"startTime\");\n        const endTime = localStorage.getItem(\"endTime\");\n        const url = new URL(API_URL + 'guest');\n        url.search = new URLSearchParams({ courses, extraCurriculum: extracurriculum, startTime, endTime });\n        fetch(url, {\n            method: 'GET',\n            credentials: 'include'\n        })\n        .then(response => response.json())\n        .then(response => {\n            const schedules = response.schedule\n            localStorage.setItem(\"schedules\", JSON.stringify(schedules));\n            const allEvents = generateSchedules(schedules);\n            localStorage.setItem(\"events\", JSON.stringify(allEvents));\n            props.show(false);\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n\n    return (\n        <div style={{margin: 'auto'}}>\n            <AsyncSelect \n                styles={styles} \n                onChange={handleChange}\n                loadOptions={loadOptions}\n                isMulti\n                placeholder='Enter course name e.g. csci201'\n\n            />\n            <div>\n                <Button block style={{width: '30%', margin: '22px auto', minWidth: '30%'}} variant=\"outline-danger\" onClick={createSchedules} >GENERATE SCHEDULES</Button>\n            </div>\n        </div>\n    );\n}\n\nexport default AddCourseForm;","import { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport { generateSchedules } from '../Helpers/getSchedules';\nimport { API_URL } from '../env';\nimport { useAuth } from '../Context/AuthProvider'\nimport AddCourseForm from './AddCourseForm';\nimport Button from 'react-bootstrap/Button';\nimport '../css/Schedule.css';\n\nconst Schedule = (props) => {\n    const [ schedules, setSchedules ] = useState([])\n    const [scheduleIndex, setIndex] = useState(0)\n    const { auth } = useAuth();\n    const [ update, setUpdate ] = useState(false);\n    const handleRightClick = () => {\n        if(scheduleIndex < schedules.length - 1) {\n            setIndex(scheduleIndex + 1)\n        }\n        else {\n            setIndex(0)\n        }\n    }\n    const handleLeftClick = () => {\n        if(scheduleIndex > 0) {\n            setIndex(scheduleIndex - 1)\n        }\n        else {\n            setIndex(schedules.length - 1)\n        }\n    }\n\n    const handleGetSavedSchedule = () => {\n        if (!auth) {\n            alert(\"You must be logged in to get your schedule!\");\n        }\n        else {\n            const url = new URL(API_URL + 'saveschedule');\n            fetch(url, {\n                method: 'GET',\n                credentials: 'include'\n            })\n            .then(response => response.json())\n            .then(response => {\n                console.log(response)\n                const events = generateSchedules([response], false);\n                localStorage.setItem(\"events\", JSON.stringify(events))\n                localStorage.setItem(\"schedules\", JSON.stringify([response]))\n                setSchedules(events)\n                setIndex(0)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        }\n    }\n\n    const handleSelectFavoriteSchedule = () => {\n        if (!auth) {\n            alert(\"Must be logged in to save a schedule!\");\n        }\n        else {\n            const schedules = JSON.parse(localStorage.getItem(\"schedules\"));\n            if (schedules != null ) {\n                console.log(\"SENDING SCHEDULES\");\n                let id = \"\";\n                console.log(schedules)\n                schedules[scheduleIndex].forEach(section => {\n                    id += section.sectionId.toString() + ',';\n                })\n                if (id.charAt(id.length - 1) === ',') {\n                    id = id.slice(0, id.length-1);\n                }\n                const url = new URL(API_URL + 'saveschedule');\n                url.search = new URLSearchParams({ id })\n                fetch(url, {\n                    method: 'POST',\n                    credentials: 'include'\n                })\n                .then(() => {\n                    alert(\"Success!\");\n                })\n                .catch(error => {\n                    console.log(error);\n                    alert(\"Error saving schedule\");\n                })\n            }\n        } \n    }\n\n    const handleClearSchedule = () => {\n        localStorage.removeItem(\"schedules\");\n        localStorage.removeItem(\"events\");\n        setSchedules([]);\n    }\n\n    useEffect(() => {\n        const events = JSON.parse(localStorage.getItem(\"events\"));\n        if (events != null) {\n            setSchedules(events);\n        }\n        else {\n            setSchedules([]);\n        }\n    }, [])\n    \n\n    return (\n        <div>\n            <div style={{margin: 'auto'}}>\n                <Button variant='outline-dark' id=\"prev\" className=\"buttons\" onClick={handleLeftClick}>Prev Schedule</Button>\n                <span id=\"index\">{schedules.length > 0 ? scheduleIndex+1 : 0}<span style={{color: 'red'}}>/</span>{schedules.length}</span>\n                <Button variant='outline-dark' id=\"next\" className=\"buttons\" onClick={handleRightClick}>Next Schedule</Button>\n            </div>\n            <div id=\"calendar\">\n                <FullCalendar\n                    schedulerLicenseKey={'CC-Attribution-NonCommercial-NoDerivatives'}\n                    plugins={[ timeGridPlugin ]}\n                    initialView={'timeGridWeek'}\n                    initialDate={'2020-12-07'}\n                    hiddenDays={[0, 6]}\n                    dayHeaderFormat={{weekday: 'long'}}\n                    events={schedules[scheduleIndex]}\n                    allDaySlot={false}\n                    height={300}\n                    contentHeight={'auto'}\n                    slotMinTime={'07:00:00'}\n                    slotMaxTime={'22:00:00'}\n                    customButtons={{\n                        right: {\n                            text: 'Next Schedule',\n                            click: handleRightClick\n                        },\n                        left: {\n                            text: 'Prev Schedule',\n                            click: handleLeftClick\n                        },\n                        select: {\n                            text: 'Save this schedule',\n                            click: handleSelectFavoriteSchedule\n                        },\n                        getSaved: {\n                            text: 'Get saved schedule',\n                            click: handleGetSavedSchedule\n                        },\n                        clear: {\n                            text: 'Clear Schedules',\n                            click: handleClearSchedule\n                        },\n                        search: {\n                            text: 'Modify Courses',\n                            click: () => props.show(true)\n                        }\n                    }}\n                    // headerToolbar = {{\n                    //     left: 'left',\n                    //     center: '',\n                    //     right: 'right'\n                    // }}\n                    headerToolbar={false}\n                    dayHeaderFormat={{\n                        weekday: 'short'\n                    }}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Schedule;","import React, { createContext, useContext, useEffect} from 'react';\nimport { API_URL } from '../env'\nconst UserContext = createContext();\nconst UserProvider = (props) => {\n    useEffect(() => {\n        // this function is called everytime the browser is refreshed\n        getUser();\n    });\n\n    const getUser = async () => {\n        // gets the user information from the server database\n        // must be logged on in order to communicate with database\n        await fetch(API_URL + \"profile\", {\n            method: \"GET\",\n            credentials: 'include'\n        }).then(response => response.json())\n        .then(data => {\n            // calls setUser, setCourses, and setPreferences\n            // waiting on response format from backend\n            const courses = data.Courses.split(',');\n            courses.map(course => {\n                return {\n                    department: course.match('[^0-9]+'),\n                    courseNumber: parseInt(course.match('[0-9]+'))\n                }\n            })\n            const newCourses = []\n            courses.forEach(course => {\n                if (course) {\n                    const department = course.match('[^0-9]+')[0];\n                    const courseNumber = parseInt(course.match('[0-9]+'));\n                    newCourses.push({department, courseNumber});\n                }\n            })\n            localStorage.setItem(\"courses\", JSON.stringify(newCourses))\n        })\n        .catch(error => {\n            console.log(error)\n        });\n    }\n\n    // All components that nested under this component will have access to these elements, and will be able to call these functions\n    return <UserContext.Provider value={{ getUser }} {...props}/>;\n}\n\n// useAuth returns an object containing the elements in the provider\nconst useUser = () => useContext(UserContext);\nexport { UserProvider, useUser };\n\n// to use this provider, a component must import useAuth and call it as a function for it to return an object","import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport ListGroup from \"react-bootstrap/ListGroup\"\nimport { API_URL } from '../env'\nimport { generateSchedules } from '../Helpers/getSchedules'\nimport { useUser } from '../Context/UserProvider'\n\nconst AuthDashboard = (props) => {\n    // displays current chosen courses\n  // allows user to add new courses\n  // saves course preferences in localStorage so that preferences don't get deleted later on\n  const [courses, setCourses] = useState([]);\n  const [extracurriculars, setExtracurriculars] = useState([]);\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [changedPreferences, setChanged] = useState(false);\n  const { getUser } = useUser();\n\n  const checkTime = (time) => {\n    try {\n      const split = time.split(\":\");\n      const hours = parseInt(split[0]);\n      const minutes = parseInt(split[1]);\n      if (split[0].length !== 2 || split[1].length !== 2) return false;\n      console.log(split[0].length)\n      if (hours < 0 || hours >= 24) return false;\n      if (minutes < 0 || minutes >= 60) return false;\n      return true;\n    }\n    catch(error) {\n      return false;\n    }\n  }\n\n  useEffect(() => {\n    let courseData = JSON.parse(localStorage.getItem(\"courses\"));\n    let extracurricularData = JSON.parse(localStorage.getItem(\"extracurriculars\"));\n    let startTimeData = localStorage.getItem(\"startTime\");\n    let endTimeData = localStorage.getItem(\"endTime\");\n    if (courseData != null) {\n      setCourses(courseData)\n    }\n    else setCourses([])\n    if (extracurricularData != null) {\n      setExtracurriculars(extracurricularData);\n    }\n    else setExtracurriculars([])\n    if (startTimeData != null) {\n      setStartTime(startTimeData);\n    }\n    else setStartTime(null)\n    if (endTimeData != null) {\n      setEndTime(endTimeData);\n    }\n    else setEndTime(null);\n  }, [changedPreferences])\n\n  const addCourse = (event) => {\n    event.preventDefault();\n    // given a course, communicates with the server to check if course is valid\n    // if valid, display course on dashboard add to courses, and save to localStorage\n    const courseName = event.target.elements.add.value.toUpperCase().split(\" \");\n    const department = courseName[0];\n    const courseNumber = parseInt(courseName[1]);\n    console.log(department)\n    console.log(courseNumber)\n    verifyCourse(department, courseNumber, true)\n    .then(() => {\n      alert(\"Valid Course!\");\n      getUser()\n      .then(() => {\n        setChanged(!changedPreferences)\n      })\n    })\n    .catch(() => {\n      alert(\"Invalid course.\");\n    });\n  };\n\n  const verifyCourse = (department, courseNumber, add) => {\n    const url = new URL(API_URL + \"courses\")\n    url.search = new URLSearchParams({department, courseNumber, clear: 0})\n    return new Promise((resolve, reject) => {\n      fetch(url, {\n        method: add ? \"GET\": \"DELETE\",\n        credentials: 'include'\n      }).then(response => response.json())\n      .then(response => {\n        console.log(response)\n          if (Object.keys(response).length === 0 && response.constructor === Object) {\n            return reject();\n          }\n          else {\n            return resolve();\n          }\n      })\n      .catch(error => {\n        // testing purposes, later change to false\n          console.log(error)\n          return reject();\n      });\n    })\n  };\n\n  const removeCourse = (event) => {\n    event.preventDefault();\n    const courseName = event.target.elements.remove.value.toUpperCase().split(\" \");\n    const department = courseName[0];\n    const courseNumber = parseInt(courseName[1]);\n    // given a course, removes course from list of courses\n    verifyCourse(department, courseNumber, false)\n    .then(() => {\n      alert(\"Valid Course!\");\n      getUser()\n      .then(() => {\n        setChanged(!changedPreferences)\n      })\n    }).catch(error => {\n      alert(\"Course does not exist\")\n    })\n  };\n\n  const addExtracurricular = (event) => {\n      event.preventDefault();\n      const start = event.target.elements.start.value;\n      const end = event.target.elements.end.value;\n      if (start === \"\" || end === \"\") {\n        alert(\"Both start time and end time must be present for an extracurricular!\");\n        return;\n      }\n      if(!checkTime(start) || !checkTime(end)) {\n        alert(\"Invalid time format. Must be in military time\");\n        return;\n      }\n      const extracurricular = [start + \" \" + end];\n      let extracurricularData = JSON.parse(localStorage.getItem(\"extracurriculars\"));\n      if (extracurricularData === null) {\n        extracurricularData = [ extracurricular ]\n      }\n      else {\n        extracurricularData.push(extracurricular);\n      }\n      console.log(extracurricularData);\n      localStorage.setItem(\"extracurriculars\", JSON.stringify(extracurricularData));\n      setChanged(!changedPreferences);\n  }\n\n  const addTimes = event => {\n    event.preventDefault();\n    const start = event.target.elements.start.value;\n    const end = event.target.elements.end.value;\n    if (start !== \"\") {\n      if(!checkTime(start)) {\n        alert(\"Invalid time format. Must be in military time\");\n        return;\n      }\n      localStorage.setItem(\"startTime\", start);\n    }\n    if (end !== \"\") {\n      if(!checkTime(end)) {\n        alert(\"Invalid time format. Must be in military time\");\n        return;\n      }\n      localStorage.setItem(\"endTime\", end);\n    }\n    setChanged(!changedPreferences);\n  }\n\n  const generateEvents = () => {\n    console.log(\"GENERATING EVENTS\")\n    const prefURL = new URL(API_URL + \"pref\")\n    const generateURL = new URL(API_URL + \"generate\");\n    const extracurriculars = JSON.parse(localStorage.getItem(\"extracurriculars\"))\n    let extracurriculum = \"\";\n    if (extracurriculars !== null) {\n      extracurriculars.forEach(extracurricular => {\n        const strFormat = JSON.stringify(extracurricular) + \",\";\n        extracurriculum += strFormat;\n      })\n      extracurriculum = extracurriculum.slice(0, -1)\n    }\n    else {\n      extracurriculum = null;\n    }\n    \n    const startTime = localStorage.getItem(\"startTime\");\n    const endTime = localStorage.getItem(\"endTime\");\n    prefURL.search = new URLSearchParams({startTime, endTime, extraCurriculum: extracurriculum})\n    fetch(prefURL, {\n      method: 'POST',\n      credentials: 'include'\n    })\n    .then(() => {\n      fetch(generateURL, {\n        method: 'GET',\n        credentials: 'include'\n      })\n      .then(response => response.json())\n      .then(schedules => {\n        localStorage.setItem(\"schedules\", JSON.stringify(schedules));\n        const allEvents = generateSchedules(schedules);\n        localStorage.setItem(\"events\", JSON.stringify(allEvents));\n        props.history.push('/')\n\n      })\n      .catch(error => {\n        console.log(error);\n      })\n    })\n    .catch(error => {\n      console.log(error);\n    })\n  }\n\n  const clearPreferences = () => {\n    localStorage.removeItem(\"extracurriculars\");\n    localStorage.removeItem(\"startTime\");\n    localStorage.removeItem(\"endTime\");\n    setChanged(!changedPreferences);\n    alert(\"Success!\");\n  }\n\n  const clearCourses = () => {\n    const url = new URL(API_URL + 'courses');\n    url.search = new URLSearchParams({clear: 1});\n    fetch(url, {\n      method: 'DELETE',\n      credentials: 'include'\n    }).then(response => response.json())\n    .then(response => {\n      if (Object.keys(response).length === 0 && response.constructor === Object) {\n        console.log(\"error\");\n        alert(\"Error\");\n      }\n      else {\n        console.log(response)\n        alert(\"Success!\");\n        getUser()\n        .then(() => {\n          setChanged(!changedPreferences);\n        })\n      }\n    })\n    .catch(error => {\n      console.log(error);\n      alert(\"Error\");\n    })\n  }\n\n  return (\n    <div>\n      <Button variant=\"info\" onClick={clearPreferences}>Clear Preferences</Button>\n        &nbsp;&nbsp;\n      <Button variant=\"info\" onClick={clearCourses}>Clear courses</Button>\n      <br/>\n      <br/>\n      <p>Courses with TBA times are not considered</p>\n      <p>If a schedule can't meet preferences, it will ignore preferences</p>\n      <p>Extracurriculars are assumed to be for everyday</p>\n      <Container>\n        <Row>\n          <Col>\n          <Form onSubmit={addCourse}>\n          {\" \"}\n          <Form.Group controlId=\"add\">\n          <Form.Label>Add a class:</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter a class e.g. CSCI 201\" />\n          <Form.Text>Make sure there is a space between department and course number</Form.Text>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Add\n        </Button>\n      </Form>\n          </Col>\n          <Col>\n          <Form onSubmit={removeCourse}>\n        {\" \"}\n        <Form.Group controlId=\"remove\">\n          <Form.Label>Remove a class:</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter a class e.g. CSCI 201\" />\n          <Form.Text>Make sure there is a space between department and course number</Form.Text>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Remove\n        </Button>\n      </Form>\n          </Col>\n        </Row>\n        <br/>\n        </Container>\n          <Form onSubmit={addExtracurricular}>\n            <Container fluid>\n              <Row>\n                <Col>\n                <Form.Group controlId=\"start\">\n                <Form.Label>Extracurricular start time:</Form.Label>\n                <Form.Control type=\"time\" placeholder=\"00:00\"/>\n                <Form.Text>Enter military time format e.g. 08:20</Form.Text>\n                </Form.Group>\n                </Col>\n                <Col>\n                <Form.Group controlId=\"end\">\n                <Form.Label>Extracurricular end time:</Form.Label>\n                <Form.Control type=\"time\" placeholder=\"00:00\"/>                \n                <Form.Text>Enter military time format e.g. 08:20</Form.Text>\n                </Form.Group>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                <Button variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n                </Col>\n              </Row>\n            </Container>\n      </Form>\n      <br/>\n      <Form onSubmit={addTimes}>\n        <Container>\n          <Row>\n            <Col>\n            <Form.Group controlId=\"start\">\n            <Form.Label>Earliest start time:</Form.Label>\n            <Form.Control type=\"time\" placeholder=\"00:00\"/>\n            <Form.Text>Enter military time format e.g. 08:20</Form.Text>\n          </Form.Group>\n            </Col>\n            <Col>\n            <Form.Group controlId=\"end\">\n            <Form.Label>Latest end time:</Form.Label>\n            <Form.Control type=\"time\" placeholder=\"00:00\"/>\n            <Form.Text>Enter military time format e.g. 08:20</Form.Text>\n          </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n            <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n            </Col>\n          </Row>\n        </Container>\n      </Form>\n      <br/>\n      <div>\n        <p className=\"text-center\">\n          <Button variant=\"outline-danger\" onClick={generateEvents} >GENERATE EVENTS</Button>\n        </p>\n      </div>\n      {/*<Container fluid>*/}\n      {/*    <Row className=\"justify-content-center\">*/}\n      {/*      <Button style={{background: 'red'}} variant=\"primary\" onClick={generateEvents} block>*/}\n      {/*        GENERATE EVENTS*/}\n      {/*      </Button>*/}\n      {/*    </Row>*/}\n      {/*</Container>*/}\n      <br/>\n\n      <Container fluid>\n        <Row>\n          <Col>\n          <h4>Current Courses </h4>\n          <div>\n          <ListGroup>\n              {courses.map((course) => (\n                  <ListGroup.Item>{course.department + course.courseNumber.toString()}</ListGroup.Item>\n              ))}\n            </ListGroup>\n          </div>\n          </Col>\n          <Col>\n          <div>\n            <h4>Extracurriculars </h4>\n          <ListGroup>\n              {extracurriculars.map(extracurricular => {\n                const times = extracurricular[0].split(' ');\n              return <ListGroup.Item>Start: {times[0]} <br/> End: {times[1]}</ListGroup.Item>\n              })}\n            </ListGroup>\n          </div>\n          </Col>\n          <Col>\n              <ListGroup>\n                {startTime ?  <ListGroup.Item>Start Time: {startTime}</ListGroup.Item> : null}\n                {endTime ? <ListGroup.Item>End Time: {endTime}</ListGroup.Item> : null}\n              </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n      \n    </div>\n  );\n}\n\nexport default AuthDashboard\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Schedule from './Schedule'\nimport AuthDashboard from './AuthDashboard'\nconst AuthApp = () => {\n    // handles url routing within the authenticated interface\n    // more routes can be added later on\n    console.log('authenticated');\n    return (\n        <Switch>\n            <Route exact path='/' component={Schedule} />\n            <Route path='/dashboard' component={AuthDashboard} />\n        </Switch>\n    );\n}\n\nexport default AuthApp","export default __webpack_public_path__ + \"static/media/Scheduler.a4ab5cf0.png\";","import React, { useState } from \"react\";\nimport { Navbar, Nav as Nv } from \"react-bootstrap\";\nimport { LinkContainer } from 'react-router-bootstrap';\nimport logo from '../misc/Scheduler.png';\nimport '../css/Nav.css'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\n\nconst Nav = (props) => {\n  // can call these functions from auth provider to handle changing authentication\n  // const { auth, signUp, signIn, signOut } = useAuth();\n\n  // renders at the top of the screen\n  // if auth is true, navbar shows signOut button\n  // otherwise, navbar shows signUp and signIn buttons\n  const [ activeKey, setKey ] = useState(0) \n\n  const handleSelect = key => {\n    setKey(key);\n  }\n\n  return (\n    <Navbar>\n      {!props.search ? \n      <LinkContainer to='/'>\n        <Navbar.Brand onClick={() => props.show(true)}><img id='navLogo' src={logo} /></Navbar.Brand>\n      </LinkContainer> : null\n      }\n      {/* <Nv onSelect={handleSelect} activeKey={activeKey}>\n        <Navbar.Brand href=\"/\">Home</Navbar.Brand>\n        <LinkContainer to='/schedule'>\n          <Nv.Link eventKey={1}>Schedule</Nv.Link>\n        </LinkContainer>\n        <LinkContainer to='/dashboard'>\n          <Nv.Link eventKey={2}>Dashboard</Nv.Link>\n        </LinkContainer>\n      </Nv> */}\n\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n      <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\n        <Nv className=\"ml-auto\">\n          {!props.search ? \n          <Nv.Link onClick={() => props.show(true)}>Modify Courses</Nv.Link> :\n          <Nv.Link onClick={() => props.show(false)}>Previous Selections</Nv.Link>}\n        </Nv>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n// return (\n//   <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n//   <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n//   <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n//   <Navbar.Collapse id=\"responsive-navbar-nav\">\n//     <Nav className=\"mr-auto\">\n//       <Nav.Link href=\"#features\">Features</Nav.Link>\n//       <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n//       <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n//         <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n//         <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n//         <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n//         <NavDropdown.Divider />\n//         <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n//       </NavDropdown>\n//     </Nav>\n//     <Nav>\n//       <Nav.Link href=\"#deets\">More deets</Nav.Link>\n//       <Nav.Link eventKey={2} href=\"#memes\">\n//         Dank memes\n//       </Nav.Link>\n//     </Nav>\n//   </Navbar.Collapse>\n// </Navbar>\n// )\n\nexport default Nav;\n","import { useState } from 'react';\nimport '../css/Welcome.css';\nimport logo from '../misc/Scheduler.png';\nimport AddCourseForm from './AddCourseForm';\nimport Schedule from './Schedule';\nimport Nav from './Nav'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\n\nconst Home = (props) => {\n    const [ search, setSearch ] = useState(true);\n    const [ clear, setClear ] = useState(false)\n\n    const showSearch = flag => {\n        setSearch(flag);\n    }\n\n    const clearSchedules = () => {\n        localStorage.removeItem(\"schedules\");\n        localStorage.removeItem(\"events\");\n        setClear(!clear)\n    }\n\n    return (\n        <div>\n            <Nav search={search} clearSchedules={clearSchedules} clear={clear} show={showSearch} />\n            {/* <Button onClick={() => setSearch(!search)}>Change</Button> */}\n            <Container>\n            {\n                search ? \n                    <div id='home'>\n                        <div style={{width: '50%', margin: '150px auto 20px auto', maxWidth: '50%', textAlign: 'center'}}>\n                            <img id='mainLogo' src={logo} alt='schedule logo'/>\n                        </div>\n                        <AddCourseForm show={showSearch} {...props} /> \n                    </div> : \n                    <div>\n                        <Schedule show={showSearch} />\n                    </div>\n            }\n            </Container>\n            \n        </div>\n    );\n}\n\nexport default Home;","import React from 'react'\nimport { Switch, Route} from 'react-router-dom';\nimport Schedule from './Schedule'\nimport GuestDashboard from './GuestDashboard'\nimport Home from './Home'\n\nconst GuestApp = () => {\n    // handles url routing within the guest interface\n    // more routes can be added later on\n    return (\n        <Switch>\n            <Route exact path='/' component={Home}/>\n        </Switch>\n    );\n}\n\nexport default GuestApp","import AuthApp from './AuthApp';\nimport GuestApp from './GuestApp';\nimport Nav from './Nav'\nimport React from 'react'\nimport { UserProvider } from '../Context/UserProvider'\nimport { useAuth } from '../Context/AuthProvider'\nimport Container from 'react-bootstrap/Container'\n\nconst App = () => {\n  // gets auth status from AuthProvider\n  const { auth } = useAuth()\n\n  // if auth is true, an authenticated app is rendered with a user provider to save user data\n  // otherwise, a guest app is rendered with no user data\n\n  // the functionality of AuthApp and GuestApp will be different\n\n  // makes sure Navbar always appears on top of page\n  return (\n    <div>\n      {auth ? <UserProvider><AuthApp/></UserProvider> : <GuestApp/>}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './Context/AuthProvider'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.REACT_APP_ROUTER_BASE || '/'}>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}